{"version":3,"sources":["addCategory/AddCategory.js","gifGridItem/GifGridItem.js","helpers/getGifs.js","GifGrid/GifGrid.js","hooks/useFetchGifs.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","image","GiftExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2LAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cACzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OAEI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACrCN,EAAc,MAMlB,SAEI,uBAAOO,KAAK,OACRC,MAAOT,EACPU,SAnBa,SAACP,GACtBF,EAAcE,EAAEQ,OAAOF,a,QCLlBG,EAAc,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,MAAMC,EAAS,EAATA,IAC/B,OACI,sBAAKC,UAAU,yCAAf,UACI,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAKA,Q,uBCNJK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbN,EADa,iDACmCO,UAAUF,GAD7C,+DAEAG,MAAMR,GAFN,cAEbS,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC3B,MAAO,CACHC,GAAID,EAAIC,GACRhB,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIE,cAAN,aAAE,EAAYC,iBAAiBjB,QATvB,kBAaZY,GAbY,4CAAH,sDCIPM,EAAU,SAAC,GAAkB,IAAhBb,EAAe,EAAfA,SAEtB,ECHwB,SAACA,GAGzB,MAA0BpB,mBAAS,CAC/B0B,KAAM,GACNQ,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OAVAC,qBAAU,WACNlB,EAAQC,GACHkB,MAAK,SAAAC,GACFH,EAAS,CACLV,KAAMa,EACNL,SAAS,SAGvB,CAACd,IAEIe,EDfuBK,CAAapB,GAA/BW,EAAZ,EAAOL,KAAYQ,EAAnB,EAAmBA,QAEnB,OACI,qCACI,oBAAIlB,UAAU,oCAAd,SAAmDI,IAClDc,GAAW,mBAAGlB,UAAU,wCAAb,qBAChB,qBAAKA,UAAU,YAAf,SAGYe,EAAOH,KAAI,SAACa,GAAD,OACP,cAAC,EAAD,eAEQA,GADCA,EAAMX,aEUxBY,EAvBc,WAGzB,MAAoC1C,mBAAS,IAA7C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KACA,OACI,gCACI,iDACA,uBACA,iEACA,cAAC,EAAD,CAAaA,cAAeA,IAE5B,6BAEQ4C,EAAWf,KAAI,SAAAR,GAAQ,OACnB,cAAC,EAAD,CAEIA,SAAUA,GADLA,Y,MCZjCwB,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.74c4362d.chunk.js","sourcesContent":["import React, {useState} from 'react'\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({setCategories}) => {\n    const [inputValue, setInputValue] = useState(\"\");\n\n    const handleInputValue = (e) => {\n        setInputValue(e.target.value)\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if (inputValue.trim().length > 2) {\n            setCategories(cats => [inputValue,...cats ]);\n            setInputValue(\"\");\n        }\n        \n    }\n    return (\n\n        <form onSubmit={handleSubmit}>\n\n            <input type=\"text\"\n                value={inputValue}\n                onChange={ handleInputValue}/>\n        \n        </form>\n        \n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n","import React from 'react'\n\nexport const GifGridItem = ({title,url}) => {\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={url} alt={title} />\n            <p>{ title}</p>\n        </div>\n    )\n}\n","export const getGifs = async (category) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=Moagzl6SlsGKWptTyvvTbfcFhTqLWAc8`\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n    \n    const gifs = data.map((img) => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n    \n    return gifs;\n}","import React from 'react'\nimport { GifGridItem } from '../gifGridItem/GifGridItem';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\n\nexport const GifGrid = ({ category }) => {\n    \n    const {data:images,loading} = useFetchGifs(category);\n    \n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n            {loading && <p className=\"card animate__animated animate__flash\">Loading</p>}\n        <div className=\"card-grid\">\n            \n                {\n                    images.map((image) => (\n                        <GifGridItem\n                            key={image.id}\n                            {...image} />\n                    ))\n                }\n            \n            </div>\n            </>\n    )\n}\n","import { useEffect, useState } from \"react\"\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useFetchGifs = (category) => {\n    \n\n    const [state, setstate] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(() => {\n        getGifs(category)\n            .then(imgs => {\n                setstate({\n                    data: imgs,\n                    loading: false\n                })\n            });\n    },[category])\n\n    return state;\n}","import React, { useState } from 'react'\nimport { AddCategory } from './addCategory/AddCategory'\nimport { GifGrid } from './GifGrid/GifGrid'\n\nexport const GiftExpertApp = () => {\n\n    \n    const [categories, setCategories] = useState([])\n    return (\n        <div>\n            <h2>Gift Expert App</h2>\n            <hr />\n            <h3>Busca tus personajes favoritos:</h3>\n            <AddCategory setCategories={setCategories} />\n            \n            <ol>\n                {\n                    categories.map(category =>\n                        <GifGrid\n                            key={category}\n                            category={category} />)\n                }\n            </ol>\n        </div>\n    )\n}\n\nexport default GiftExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GiftExpertApp from './GiftExpertApp';\nimport './index.css';\n\n\n\nReactDOM.render(\n  \n    <GiftExpertApp />,\n  \n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}